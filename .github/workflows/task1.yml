 # This is a basic workflow to help you get started with Actions

name: Task1

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "Task1" ]
  pull_request:
    branches: [ "Task1" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
         os: [ubuntu-latest]
         generator: [Visual Studio 17 2022]
         exclude:
          - os: ubuntu-latest
            generator: Visual Studio 17 2022
      

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan

      - name: Install Doxygen
        run: |
         sudo apt-get update
         sudo apt-get install -y doxygen graphviz

      - name: Install clang-tidy and dependencies
        run: |
         sudo apt-get update
         sudo apt-get install -y clang-tidy clang clang-tools cmake ninja-build
       
      # Runs a set of commands using the runners shell
      - name: Configure Conan profiles
        run: |
          conan profile detect --force
      
      - name: Install latest CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 4.0.0

      - name: Install make (решение ошибки)
        run: |
         sudo apt-get update
         sudo apt-get install -y make

      - name: Install dependencies with Conan
        run : |
          conan install Task1 --output-folder=Task1/ --build=missing \
          -s compiler.cppstd=20

      - name: Configure CMake
        run: | 
          cd Task1 && cmake --preset conan-release

      - name: Build
        run: cmake --build Task1/build/Release

      - name: Test
        run: |
          cd Task1/build/Release && ctest -V -j4
